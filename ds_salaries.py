# -*- coding: utf-8 -*-
"""DS_salaries.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GZblHAE4b2uhIDQL_N1ISi4Vs3ujRqj1
"""

# import libraries for Data manipulation and visualization

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
sns.set()

import warnings
warnings.filterwarnings("ignore")

# import Dataset

ds_salaries = pd.read_csv("data_salaries.csv")
ds_salaries.head()

# Check shape

ds_salaries.shape

ds_salaries.info()

#Unnamed column is not useful for analysis; Drop column

ds_salaries.drop('Unnamed: 0', axis=1, inplace=True)
ds_salaries.head()

# Check for missing values

ds_salaries.isna().sum()

ds_salaries.describe()

ds_salaries.describe().astype(int)

ds_salaries.describe(include='object')

# Check unique values in categorical variables

categorical = ['experience_level','employment_type','job_title','employee_residence','company_location','company_size']

for i in categorical:
    print('Unique values in ' + i + ' : ' + str(ds_salaries[i].unique()))
    print('\n')

print ('\nNumber of unique values in Categorical variables:\n')
print (ds_salaries[categorical].nunique())

print(ds_salaries.dtypes)

import matplotlib.pyplot as plt
import seaborn as sns

# Select numeric columns
numeric_ds_salaries = ds_salaries.select_dtypes(include=['float64', 'int64'])

# Create heatmap
plt.figure(figsize=(6, 6))
sns.heatmap(numeric_ds_salaries.corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

"""Summary of Findings
The Dataset contains 607 records and 12 features.
There are no missing values in the dataset.
Unnamed column is not useful for our analysis (Dropped column).
Data contains values from 2020 to 2022 Work Year
There are 4 unique experience levels with SE occuring 280 times.
The Dataset contains 4 employment types; FT (Full time employment) is the most common type occurring 588 instances).
There are 50 unique job titles.
Salary is recorded in 17 different currencies.
The average salary in USD is 112,297.87
Employees are resident in 57 locations while the Companies are located in 50 locations.
The US contains the most Data Science professionals and companies with 332 professionals and 355 companies resident in the US.

1. Univariate analysis

1.1. Categorical variables

1.1.1. Experience Level
"""

# Rename Experience level values
ds_salaries.experience_level.replace({'EN':'Entry-Level/Junior','MI':'Mid-level/Intermediate','SE':'Senior-level/Expert','EX':'Executive-level/Director'}, inplace=True)

plt.figure(figsize=(10,6))
plt.title('Experience Levels of Data Science Jobs', fontsize=18)
ax = sns.countplot (x='experience_level', data=ds_salaries)
for i in ax.containers:
    ax.bar_label(i)
plt.xlabel('Experience Level', fontsize=14)
plt.ylabel('Count', fontsize=14)
plt.show()

experience_ratio = ds_salaries.experience_level.value_counts(normalize=True)
display(experience_ratio)

fig, ax = plt.subplots(figsize=(10, 6))
x=experience_ratio

labels = ['Senior-level/Expert','Mid-level/Intermediate','Entry-Level/Junior','Executive-level/Director']

patches, texts, pcts = ax.pie(
    x, labels=labels, autopct='%.2f%%',
    wedgeprops={'linewidth': 3.0, 'edgecolor': 'white'},
    textprops={'size': 'x-large'},
    startangle=90)
# For each wedge, set the corresponding text label color to the wedge's
# face color.
for i, patch in enumerate(patches):
  texts[i].set_color(patch.get_facecolor())
plt.setp(pcts, color='white')
plt.setp(texts, fontweight=600)
ax.set_title('Experience Level', fontsize=18)
plt.tight_layout()

"""A large percentage of Data Science Professionals occupy Senior-level/Expert as well as Mid-level/Intermediate positions. However, Executive-level/Directors in Data Science are few; accounting for only 4.28% of the dataset.

1.1.2. Job Titles
"""

plt.figure(figsize=(15,15))
plt.title('Various Job Titles in Data Science', fontsize=20, fontweight='bold')
sns.countplot(y='job_title', data=ds_salaries, order=ds_salaries['job_title'].value_counts().index)
plt.xlabel('Count', fontsize=15, fontweight='bold')
plt.ylabel('Job Titles', fontsize=20, fontweight='bold')
plt.show()

from wordcloud import WordCloud, STOPWORDS

#Create text variable
from collections import Counter
word_cloud_list=Counter(ds_salaries.job_title)

#Generate Word Cloud
wordcloud = WordCloud(
    width = 3000,
    height = 2000,
    #random_state=1,
    background_color="white",
    #colormap="Set2",
    collocations= False,
    stopwords=STOPWORDS,
).generate_from_frequencies(word_cloud_list)

# Display the generated word cloud
plt.figure(figsize=(15,8))
plt.title('Various Job Titles in Data Science', fontsize=20, fontweight='bold')
plt.imshow(wordcloud)
plt.axis("off")

"""The top 4 job titles include Data Scientist, Data Engineer, Data Analyst and Machine Learning Engineer. Other job titles have less than 20 people in the respective positions/titles.

1.1.3 Employment Type
"""

# Rename Employment Type values
ds_salaries.employment_type.replace({'PT':'Part-time','FT':'Full-time','CT':'Contract','FL':'Freelance'}, inplace=True)

plt.figure(figsize=(10,5))
plt.title('Employment Type of Data Science Jobs', fontsize=18)
ax = sns.countplot (x='employment_type', data=ds_salaries)
for i in ax.containers:
    ax.bar_label(i)
plt.show()

emp_type_ratio = ds_salaries.employment_type.value_counts(normalize=True)
display(emp_type_ratio)

"""Full time employment is the most common employment type covering 96.9% of the dataset and the other 3 employment types are a total of 3%. Freelance is the least with only 4 records.

1.1.4. Employee Residence & Company Location
"""

fig,axes=plt.subplots(1,2,figsize=(20,15))
sns.countplot(ax=axes[0],y='employee_residence', data=ds_salaries, order=ds_salaries['employee_residence'].value_counts().index)
sns.countplot(ax=axes[1],y='company_location', data=ds_salaries,  order=ds_salaries['company_location'].value_counts().index)

axes[0].set_title('Employee Residence', fontsize=25, fontweight='bold')
axes[0].set(xlabel=None)
axes[0].set(ylabel=None)
axes[1].set_title('Company Location', fontsize=25, fontweight='bold')
axes[1].set(xlabel=None)
axes[1].set(ylabel=None)

fig.supxlabel('Count', fontsize=20, fontweight='bold')
fig.supylabel('Location', fontsize=20, fontweight='bold')

plt.show()

"""For Employee Residence and Company location, the US is the highest in terms of frequency, followed by Great Britain. A total of over 300 Employees and Companies are resident in the US while other locations record values below 50 for both Employee residence and company location.

1.1.5. Company Size
"""

# Rename Company Size
ds_salaries.company_size.replace({'S':'Small(<50)','M':'Medium(50-250)','L':'Large(>250)'}, inplace=True)

plt.figure(figsize=(8,6))
plt.title('Company Size', fontsize=18)
ax = sns.countplot (x='company_size', data=ds_salaries)
for i in ax.containers:
    ax.bar_label(i)
plt.show()

size_ratio = ds_salaries.company_size.value_counts(normalize=True)
display(size_ratio)

fig, ax = plt.subplots(figsize=(6, 6))
x=size_ratio
labels = ['Medium','Large','Small']

patches, texts, pcts = ax.pie(
    x, labels=labels, autopct='%.2f%%',
    wedgeprops={'linewidth': 3.0, 'edgecolor': 'white'},
    textprops={'size': 'x-large'},
    startangle=90)
# For each wedge, set the corresponding text label color to the wedge's
# face color.
for i, patch in enumerate(patches):
  texts[i].set_color(patch.get_facecolor())
plt.setp(pcts, color='white')
plt.setp(texts, fontweight=600)
ax.set_title('Distribution of Company Size', fontsize=18)
plt.tight_layout()

"""Most companies with Data Science Professionals are Medium Sized companies. Small companies have the least number of Data Science jobs.

1.2. Numeric variables

1.2.1. Work Year
"""

plt.title ('Work Year', fontsize=18)
ax = sns.countplot(x='work_year', data=ds_salaries)
for i in ax.containers:
    ax.bar_label(i)

year_ratio = ds_salaries.work_year.value_counts(normalize=True)
display(year_ratio)

fig, ax = plt.subplots(figsize=(5, 5))
x = year_ratio
labels = ['2022','2021','2020']


patches, texts, pcts = ax.pie(
    x, labels=labels, autopct='%.2f%%',
    wedgeprops={'linewidth': 3.0, 'edgecolor': 'white'},
    textprops={'size': 'x-large'},
    startangle=90)
# For each wedge, set the corresponding text label color to the wedge's
# face color.
for i, patch in enumerate(patches):
  texts[i].set_color(patch.get_facecolor())
plt.setp(pcts, color='white')
plt.setp(texts, fontweight=600)
ax.set_title('Work Year Distribution', fontsize=18)
plt.tight_layout()

"""The Dataset contains values from 2020 - 2022 with 2022 records accounting for 52.39% and 2020 being 11.9%

1.2.2. Salary in USD
"""

plt.figure(figsize=(5,5))
sns.boxplot(y='salary_in_usd', data=ds_salaries)
plt.show()

plt.figure(figsize=(15,6))
sns.distplot(ds_salaries['salary_in_usd'])
plt.title('Distribution plot of Data Science Salaries in USD', fontsize=18)
plt.show()

"""
1.2.3. Remote Ratio"""

# Rename Employment Type values
ds_salaries.remote_ratio.replace({0:'No remote work',50:'Partially remote',100:'Fully remote'}, inplace=True)

plt.title ('Remote Ratio', fontsize=18)
ax = sns.countplot(x='remote_ratio', data=ds_salaries)
for i in ax.containers:
    ax.bar_label(i)

remote_work_ratio = ds_salaries.remote_ratio.value_counts(normalize=True)
display(remote_work_ratio)

fig, ax = plt.subplots(figsize=(10, 6))

x=remote_work_ratio

cmap = plt.get_cmap('Greys')
colors = list(cmap(np.linspace(0.45,0.85, len(x))))

colors[2]='dodgerblue'
labels = ['Fully remote','No remote work','Partially remote']

patches, texts, pcts = ax.pie(
    x, labels=labels, autopct='%.2f%%',
    wedgeprops={'linewidth': 3.0, 'edgecolor': 'white'},
    textprops={'size': 'x-large'},
    startangle=90,
    colors=colors,
    # "Explode" the wedge to highlight it.
    explode=(0, 0, 0.1))

for i, patch in enumerate(patches):
   texts[i].set_color(patch.get_facecolor())
plt.setp(pcts, color='white')
plt.setp(texts, fontweight=600)
ax.set_title('Remote Work Ratio', fontsize=18)
plt.tight_layout()

"""2. Work Year Analysis

2.1 Remote ratio by work year
"""

sns.scatterplot(x='remote_ratio', y='work_year', data=ds_salaries)

plt.figure(figsize=(10,5))
plt.title("Remote Ratio by Work Year", fontsize=18)
ax = sns.countplot(x='remote_ratio', data=ds_salaries, hue = 'work_year')
for i in ax.containers:
    ax.bar_label(i)
plt.xlabel("Remote Ratio", fontsize=14)
plt.ylabel("Count", fontsize=14)
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)
plt.show()

"""3. Experience Level Analysis

3.1. Employment Type by Experience Level
"""

type_level_pivot = pd.crosstab(ds_salaries['employment_type'],ds_salaries['experience_level'])
display(type_level_pivot)

plt.figure(figsize=(10,5))
plt.title('Employment Type by Experience Level', fontsize=18, weight='bold')
ax=sns.countplot(x='employment_type', data=ds_salaries, hue = 'experience_level')
for i in ax.containers:
    ax.bar_label(i)

"""3.2. Top 3 Job Title by Experience Level"""

top_titles = ds_salaries['job_title'].value_counts()[:3]
top_titles

plt.figure(figsize=(15,5))
plt.title('Top 3 Job Titles by Experience Level', fontsize=15, fontweight='bold')
ax=sns.countplot(x='job_title', hue='experience_level', data=ds_salaries,
              order=ds_salaries['job_title'].value_counts().iloc[:3].index)
for i in ax.containers:
    ax.bar_label(i)
plt.ylabel('Count', fontsize=10, fontweight='bold')
plt.xlabel('Job Title', fontsize=10, fontweight='bold')
plt.show()

"""3.3. Company Size by Experience Level"""

size_level_pivot = pd.crosstab(ds_salaries['company_size'],ds_salaries['experience_level'])
display(size_level_pivot)

plt.figure(figsize=(10,5))
ax=size_level_pivot.plot.bar()
for i in ax.containers:
    ax.bar_label(i)

"""Medium-Sized companies hire more Data professionals in every experience level although there are significantly more Senior-level/Expert employees compared to other levels.

4. Company Location Analysis

4.1. Experience Level
"""

plt.figure(figsize=(15,15))
plt.title('Company Location by Experience Level', fontsize=20, fontweight='bold')
sns.countplot(y='company_location', hue='experience_level', data=ds_salaries, order=ds_salaries['company_location'].value_counts().index)
plt.xlabel('Count', fontsize=15, fontweight='bold')
plt.ylabel('Location', fontsize=20, fontweight='bold')
plt.show()

"""5. Salary Analysis

5.1. Salary by work year
"""

fig,axes=plt.subplots(1,2,figsize=(20,8))

sns.boxplot(ax=axes[0],x='work_year',y='salary_in_usd', data=ds_salaries)
sns.stripplot(ax=axes[1],x='work_year',y='salary_in_usd', data=ds_salaries)

plt.figure(figsize=(10,5))
sns.kdeplot(data=ds_salaries, x='salary_in_usd', hue='work_year', fill=True)
plt.title("Distribution of salary by work year", fontsize=16)
plt.xlabel("Salary (in USD)", fontsize=14)
plt.ylabel("Density", fontsize=14)
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)
plt.show()

"""The density plot shows an increase in the number of Data Science jobs and salary for each year

5.2. Salary by Experience Level
"""

fig,axes=plt.subplots(1,2,figsize=(20,8))

sns.boxplot(ax=axes[0],x='experience_level',y='salary_in_usd', data=ds_salaries)
sns.stripplot(ax=axes[1],x='experience_level',y='salary_in_usd', data=ds_salaries)

plt.figure(figsize=(10,5))
sns.kdeplot(data=ds_salaries, x='salary_in_usd', hue='experience_level', fill=True)
plt.title("Distribution of salary by Experience Level", fontsize=16)
plt.xlabel("Salary (in USD)", fontsize=14)
plt.ylabel("Density", fontsize=14)
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)
plt.show()

"""The average salary is higher for a higher experience level. Executive-level/Directors are paid the highest salaries of all the experience levels on average, and Entry-level are the least earners.

5.3. Salary by Company Size
"""

fig,axes=plt.subplots(1,2,figsize=(20,8))

sns.boxplot(ax=axes[0],x='company_size',y='salary_in_usd', data=ds_salaries)
sns.stripplot(ax=axes[1],x='company_size',y='salary_in_usd', data=ds_salaries)

plt.figure(figsize=(10,5))
sns.kdeplot(data=ds_salaries, x='salary_in_usd', hue='company_size', fill=True)
plt.title("Distribution of salary by Company Size", fontsize=16)
plt.xlabel("Salary (in USD)", fontsize=14)
plt.ylabel("Density", fontsize=14)
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)
plt.show()

"""Medium and Large-sized companies have higher pay in comparison to small sized companies

5.4. Highest salaries by job title
"""

title_sal_pivot = pd.pivot_table(data=ds_salaries,index=['job_title'],values=['salary_in_usd'], aggfunc='max').sort_values(by=['salary_in_usd'],ascending=False)
display(title_sal_pivot)

title_sal_pivot.head(10).plot.bar()
plt.title('Top 10 Job Titles with Highest Salary', fontsize=18)
plt.xlabel("Job Title", fontsize=14)
plt.ylabel("Salary in USD", fontsize=14)
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)
plt.show()

plt.figure(figsize=(15,15))
plt.title('Highest Salaries by Job Titles in Data Science', fontsize=20, fontweight='bold')
sns.lineplot(y='salary_in_usd', x='job_title', data=ds_salaries)
plt.xlabel('Job Titles', fontsize=15, fontweight='bold')
plt.ylabel('Amount', fontsize=20, fontweight='bold')
plt.xticks(rotation=90)
plt.show()

"""5.5. Average Salary by Company Location"""

loc_sal_pivot = pd.pivot_table(data=ds_salaries,index=['company_location'],values=['salary_in_usd'], aggfunc='mean').sort_values(by=['salary_in_usd'],ascending=False)
display(loc_sal_pivot)

loc_sal_pivot.head(10).plot.barh()

plt.figure(figsize=(15,15))
plt.title('Average Salary by Company Location', fontsize=20, fontweight='bold')
sns.lineplot(y='salary_in_usd', x='company_location', data=ds_salaries)
plt.xlabel('Location', fontsize=15, fontweight='bold')
plt.ylabel('Amount', fontsize=20, fontweight='bold')
plt.xticks(rotation=90)
plt.show()

"""Summary:

1. Most Data Science jobs require Senior-level/Expert experience level and very few positions are available for Executive-level/Directors.
2. The most common job titles in the Data Science field are Data Scientist, Data Engineer, Data Analyst and Machine Learning Engineer.
3. Most positions are Full-time employment.
4. Most Data Science employees and Companies are resident in the United States. However, the location where the highest average salary is paid is Russia; followed closely by the United States.
5. The Number of Data Science jobs and the salary are increasing with each year and experience-level.
6. Medium-sized and Large-sized companies pay high salaries in comparison to small-sized companies.
7. The average salary for Data Science Jobs in USD is 112,297.87.
**It is important to note that the insights are based on a sample of 607 participants and may not be representative of the entire population of data science professionals.**
"""